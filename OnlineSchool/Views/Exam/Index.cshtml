@model OnlineSchool.Models.ExamModel
@{
    ViewData["Title"] = "Exam";
}

<div>
    <h2>@Model.CourseCode | @Model.CourseTitle </h2>
    <h3>@Model.Title</h3>
</div>
<div class="row">
    <div class="col-md-3">
        <partial name="_QuestionsTab" model="Model" />
        <div class="my-5"><span id="time" style="padding: 15px; border: 3px solid black; border-radius: 44px; font-size: 18px;">00:00</span></div>
    </div>
    <div class="col-md-9">
        <form method="post">
            <input asp-for="DurationInSeconds" hidden />
            <input asp-for="AttemptId" hidden />
            @{
                foreach (var mcq in Model.McqQuestions)
                {
                    <div class="card my-3 box-shadow">
                        <div class="card-body">
                            <div class="font-weight-bold mb-1">@mcq.QuestionNumber) @mcq.Question</div>
                                
                            @{
                                int answerNumber = 1;
                                string answerLetter = "";
                            }
                                  
                            <div class="ml-5">
                                @foreach (var option in mcq.Options)
                                {
                                    switch (answerNumber)
                                    {
                                        case 1:
                                            answerLetter = "a";
                                            break;
                                        case 2:
                                            answerLetter = "b";
                                            break;
                                        case 3:
                                            answerLetter = "c";
                                            break;
                                        case 4:
                                            answerLetter = "d";
                                            break;
                                    }
                                    <div>
                                        <label class="font-italic">@answerLetter.</label>
                                        @{ 
                                            string checkedOption = option.AnsId == mcq.SelectedOptionId ? "checked" : "";
                                            string optionName = "mcq-question-" + mcq.Id + "-" + mcq.QuestionNumber;
                                            <input type="radio" name="@optionName" @checkedOption onchange="SubmitMcqAnswer(@mcq.AttemptId,@option.AnsId,  @mcq.QuestionNumber, @mcq.Id)" />
                                        }

                                        <label class="font-italic mr-3">@option.Option</label>
                                    </div>
                                    answerNumber++;
                                }
                            </div>
                            
                        </div>
                    </div>
                }
            }

            <input type="submit" value="submit" />


            <a asp-action="attemptFinished" asp-route-id="@Model.AttemptId">Finish attempt</a>
        </form>
    </div>
</div>
<script>
    function SubmitMcqAnswer(attemptId, answerId, questionNumber, mcqId) {
        $.ajax({
            url: "/exam/SubmitMcqAnswer",
            data: { mcqAttemptId: attemptId, answerId: answerId },
            success: function (result) {
                var questionTabId = "question-tab-" + mcqId + "-" + questionNumber;
                var questionTab = document.getElementById(questionTabId);
                questionTab.classList.remove("unanswered-question");
                questionTab.classList.add("answered-question");
            }
        })
    }

    function startTimer(duration, display) {
        var timer = duration, minutes, seconds;
        //debugger;
        setInterval(function () {
            UpdateTime(timer);
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            display.textContent = minutes + ":" + seconds;

            if (--timer < 0) {
                window.location.href = "/exam/AttemptFinished/" + document.getElementById("AttemptId").value;
            }

        }, 1000);
    }

    window.onload = function () {
        var durationInSeconds = document.getElementById("DurationInSeconds").value;
        display = document.querySelector('#time');
        startTimer(durationInSeconds, display);
    };


    function UpdateTime(durationRemaining) {
        //debugger;
        var attemptid = document.getElementById("AttemptId").value;
        $.ajax({
            url: "/exam/UpdateDuration",
            data: { examAttemptId: attemptid, durationLeft: durationRemaining },
            success: function (result) {
            }
        })
    }

</script>